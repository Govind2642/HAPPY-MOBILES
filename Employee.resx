<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="colorDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="employeeDataSet.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>186, 17</value>
  </metadata>
  <metadata name="employeeDataSetBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>393, 17</value>
  </metadata>
</root>